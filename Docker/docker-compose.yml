version: "3.8"

networks:
    traefik-public:
        external: true

volumes:
    database:
        external: true

services:
    reverse-proxy:
        image: traefik
        deploy:
            placement:
                constraints:
                    - node.role == manager
        networks:
            - traefik-public
        ports:
            - 80:80
            - 8080:8080
            # - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            # volumes:
            #   - ./reverse-proxy/traefik.yml:/etc/traefik/traefik.yml
        command:
            - --providers.docker.endpoint=unix:///var/run/docker.sock
            - --providers.docker.network=traefik-public

            - --api.insecure=true
            - --providers.docker.swarmMode=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.whoami.address=:8081

            - --accesslog
            - --log.level=DEBUG

    web:
        image: leodbrs/dvdrental
        depends_on:
            # - database
            - reverse-proxy
        deploy:
            placement:
                constraints:
                    - node.role == worker
            replicas: 10
            labels:
                - traefik.enable=true
                - traefik.http.routers.web.rule=Host(`192.168.56.11`)
                - traefik.http.routers.web.entrypoints=web
                - traefik.http.services.web.loadbalancer.server.port=80
        networks:
            - traefik-public
        volumes:
            - /data/dvdrental/config/dvdrental.conf:/etc/apache2/sites-available/dvdrental.conf
            - /data/dvdrental/app:/var/www/dvdrental/app

    whoami:
        image: traefik/whoami
        depends_on:
            - reverse-proxy
        deploy:
            placement:
                constraints:
                    - node.role == worker
            replicas: 10
            labels:
                - traefik.enable=true
                - traefik.http.routers.whoami.rule=Host(`192.168.56.11`)
                - traefik.http.routers.whoami.entrypoints=whoami
                - traefik.http.services.whoami.loadbalancer.server.port=8081
        networks:
            - traefik-public

    database:
        image: postgres:bullseye
        deploy:
            placement:
                constraints:
                    - node.role == manager
        networks:
            - traefik-public
        volumes:
            - database:/var/lib/postgresql/data
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
        env_file: .env
