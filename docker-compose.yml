version: '3.8'

volumes:
  dvdrental:
    driver: local
    driver_opts:
      type: nfs
      o: bind
      device: /data/dvdrental/app/

networks:
  traefik-public:
    external: true

services:

  reverse-proxy:
    image: traefik
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - traefik-public
    ports:
      - 80:80
      - 8080:8080
      # - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # volumes:
      #   - ./reverse-proxy/traefik.yml:/etc/traefik/traefik.yml
    command:
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.network=traefik-public

      - --api.insecure=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80

      - --accesslog
      - --log.level=DEBUG

  web:
    image: leodbrs/projetdevops
    depends_on:
      # - database
      - reverse-proxy
    deploy:
      replicas: 10
      labels:
        - traefik.enable=true
        - traefik.http.routers.web.rule=Host(`164.92.239.145`)
        - traefik.http.routers.web.entrypoints=web
        - traefik.http.services.web.loadbalancer.server.port=80
    networks:
      - traefik-public
    volumes:
      - /data/dvdrental/config/dvdrental.conf:/etc/apache2/sites-available/dvdrental.conf
      - /data/dvdrental/app:/var/www/dvdrental/app
    # database:
    #   image: postgres:bullseye
    #   ports:
    #     - 5432:5432
    #   volumes:
    #     - ./data/postgresql:/var/lib/postgresql/data
    #   environment:
    #     - POSTGRES_USER=${POSTGRES_USER}
    #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #     - POSTGRES_DB=${POSTGRES_DB}
