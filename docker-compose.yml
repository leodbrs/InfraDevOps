version: '3.8'
services:

  reverse-proxy:
    image: traefik
    deploy:
      placement:
        constraints:
          - node.role == manager
    command:
      #- "--log.level=DEBUG"
      - --providers.docker.swarmMode
      - --api.insecure=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
      # - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # volumes:
      #   - ./reverse-proxy/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - traefik-public

  web:
    image: leodbrs/projetdevops
    depends_on:
      - database
      - reverse-proxy
    deploy:
      replicas: 2
    volumes:
      - ./web/dvdrental.conf:/etc/apache2/sites-available/dvdrental.conf
      - ./data/app:/var/www/dvdrental/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
    networks:
      - traefik-public
    # database:
    #   image: postgres:bullseye
    #   ports:
    #     - 5432:5432
    #   volumes:
    #     - ./data/postgresql:/var/lib/postgresql/data
    #   environment:
    #     - POSTGRES_USER=${POSTGRES_USER}
    #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #     - POSTGRES_DB=${POSTGRES_DB}

networks:
  traefik-public:
